"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Card = void 0;
const core = __importStar(require("../../core"));
exports.Card = core.serialization.object({
    name: core.serialization.string(),
    number: core.serialization.string(),
    cvc: core.serialization.number(),
    expMonth: core.serialization.property("exp_month", core.serialization.number()),
    expYear: core.serialization.property("exp_year", core.serialization.number()),
    addressLine1: core.serialization.property("address_line1", core.serialization.string().optional()),
    addressLine2: core.serialization.property("address_line2", core.serialization.string().optional()),
    addressCity: core.serialization.property("address_city", core.serialization.string().optional()),
    addressCountry: core.serialization.property("address_country", core.serialization.string()),
    addressPostCode: core.serialization.property("address_post_code", core.serialization.string().optional()),
});
