/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as BumpshApi from "../../../index";
import express from "express";
export interface PaymentsServiceMethods {
    createBookingPayment(req: express.Request<{
        bookingId: string;
    }, BumpshApi.CreateBookingPaymentResponse, BumpshApi.BookingPayment, never>, res: {
        send: (responseBody: BumpshApi.CreateBookingPaymentResponse) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }, next: express.NextFunction): void | Promise<void>;
}
/**
 * Pay for bookings using a card or bank account, and view payment
 * status and history.
 *
 * > warn
 * > Bookings usually expire within 1 hour so you'll need to make your payment
 * > before the expiry date
 *
 */
export declare class PaymentsService {
    private readonly methods;
    private router;
    constructor(methods: PaymentsServiceMethods, middleware?: express.RequestHandler[]);
    addMiddleware(handler: express.RequestHandler): this;
    toRouter(): express.Router;
}
