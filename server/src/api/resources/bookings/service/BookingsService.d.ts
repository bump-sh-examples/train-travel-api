/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as BumpshApi from "../../../index";
import express from "express";
export interface BookingsServiceMethods {
  getBookings(
    req: express.Request<never, BumpshApi.GetBookingsResponse, never, never>,
    res: {
      send: (responseBody: BumpshApi.GetBookingsResponse) => Promise<void>;
      cookie: (
        cookie: string,
        value: string,
        options?: express.CookieOptions
      ) => void;
      locals: any;
    },
    next: express.NextFunction
  ): void | Promise<void>;
  createBooking(
    req: express.Request<
      never,
      BumpshApi.CreateBookingResponse,
      BumpshApi.Booking,
      never
    >,
    res: {
      send: (responseBody: BumpshApi.CreateBookingResponse) => Promise<void>;
      cookie: (
        cookie: string,
        value: string,
        options?: express.CookieOptions
      ) => void;
      locals: any;
    },
    next: express.NextFunction
  ): void | Promise<void>;
  getBooking(
    req: express.Request<
      {
        bookingId: string;
      },
      BumpshApi.GetBookingResponse,
      never,
      never
    >,
    res: {
      send: (responseBody: BumpshApi.GetBookingResponse) => Promise<void>;
      cookie: (
        cookie: string,
        value: string,
        options?: express.CookieOptions
      ) => void;
      locals: any;
    },
    next: express.NextFunction
  ): void | Promise<void>;
  deleteBooking(
    req: express.Request<
      {
        bookingId: string;
      },
      never,
      never,
      never
    >,
    res: {
      send: () => Promise<void>;
      cookie: (
        cookie: string,
        value: string,
        options?: express.CookieOptions
      ) => void;
      locals: any;
    },
    next: express.NextFunction
  ): void | Promise<void>;
}
/**
 * Create and manage bookings for train trips, including passenger details
 * and optional extras.
 *
 */
export declare class BookingsService {
  private readonly methods;
  private router;
  constructor(
    methods: BookingsServiceMethods,
    middleware?: express.RequestHandler[]
  );
  addMiddleware(handler: express.RequestHandler): this;
  toRouter(): express.Router;
}
